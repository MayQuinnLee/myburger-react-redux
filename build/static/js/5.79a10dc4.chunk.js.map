{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","price","toFixed","Orders","this","onFetchOrder","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yHCkCXC,EA/BD,SAACC,GACf,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YACzBA,EAAYE,KACR,CAACC,KAAMF,EACPG,OAAQL,EAAMC,YAAYC,KAItC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MACHI,EAAGJ,KATL,KASaI,EAAGH,OAThB,QAcP,OACI,yBAAKW,UAAWC,IAAQC,OACpB,4CAAkBZ,EAAlB,KACA,qCAAU,uCAAaN,EAAMmB,MAAMC,QAAQ,O,gCCtBjDC,E,4LAEEC,KAAKtB,MAAMuB,aAAaD,KAAKtB,MAAMwB,MAAOF,KAAKtB,MAAMyB,U,+BAIrD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAQjB,OAPQL,KAAKtB,MAAM4B,UACXF,EAASJ,KAAKtB,MAAM0B,OAAOnB,KAAI,SAAAR,GAAK,OAC5B,kBAACmB,EAAD,CACAH,IAAKhB,EAAM8B,GACXV,OAAQpB,EAAMoB,MACdlB,YAAcF,EAAME,kBAGhC,6BACCyB,O,GAhBYI,aAoCNC,uBAfS,SAAAC,GACpB,MAAM,CACFN,OAAQM,EAAMjC,MAAM2B,OACpBE,QAASI,EAAMjC,MAAM6B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIA,SAAAS,GACvB,MAAO,CACHX,aAAc,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAI9DM,CAA6CK,YAAiBf,EAAOgB","file":"static/js/5.79a10dc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = (props) => {\nconst ingredients = [];\nfor (let ingredientName in props.ingredients){\n        ingredients.push(\n            {name: ingredientName, \n            amount: props.ingredients[ingredientName]}\n        );\n    }\n\nconst ingredientOutput = ingredients.map(ig=>{\n    return <span \n        style={{\n            textTransform: 'capitalize',\n            display: 'inline-block',\n            margin: '0 8px',\n            border: '1px solid #ccc',\n            padding: '5px'\n        }}\n        key={ig.name}>\n            {ig.name} ({ig.amount}) \n    </span>\n    }\n)\n\n    return(\n        <div className={classes.Order}>\n            <p> Ingredients: {ingredientOutput} </p>\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\n        </div>\n    )\n}\nexport default order;","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount() {\n        this.props.onFetchOrder(this.props.token, this.props.userId)\n    }\n\n    render() {\n        let orders = <Spinner />\n        if(!this.props.loading){\n            orders = this.props.orders.map(order => ( \n                    <Order \n                    key={order.id}\n                    price={+order.price}\n                    ingredients= {order.ingredients} />))\n        };\n    return (\n        <div>\n        {orders}\n        </div>)\n    };\n}\n\nconst mapStateToProps = state => {\n    return{\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrder: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios));"],"sourceRoot":""}