{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    orders: state.orders.concat(newOrder),\n    purchased: true\n  });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst purchaseBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst fetchOrderStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst fetchOrderSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nconst fetchOrderFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.FETCH_ORDER_START:\n      return fetchOrderStart(state, action);\n\n    case actionTypes.FETCH_ORDER_SUCCESS:\n      return fetchOrderSuccess(state, action);\n\n    case actionTypes.FETCH_ORDER_FAIL:\n      return fetchOrderFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseInit","state","action","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","purchaseBurgerStart","fetchOrderStart","fetchOrderSuccess","fetchOrderFail","reducer","type","PURCHASE_INIT","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","FETCH_ORDER_START","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false,\n}\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, {purchased: false,})\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData, {id: action.orderId});\n    return updateObject(state, {loading: false,\n        orders: state.orders.concat(newOrder),\n        purchased: true})\n}\nconst purchaseBurgerFail = (state, action) => {\n    return updateObject(state, {loading: false})\n}\n\nconst purchaseBurgerStart = (state, action) => {\n    return updateObject(state, {loading: true})\n}\n\nconst fetchOrderStart = (state, action) => {\n    return updateObject(state, {loading: true})\n}\n\nconst fetchOrderSuccess = (state, action) => {\n    return updateObject(state, {orders: action.orders, loading: false})\n}\n\nconst fetchOrderFail = (state, action) => {\n    return updateObject(state, {loading: false})\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state,action)\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\n        case actionTypes.FETCH_ORDER_START: return fetchOrderStart(state,action);\n        case actionTypes.FETCH_ORDER_SUCCESS: return fetchOrderSuccess(state, action);\n        case actionTypes.FETCH_ORDER_FAIL: return fetchOrderFail(state,action);\n        default: return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}