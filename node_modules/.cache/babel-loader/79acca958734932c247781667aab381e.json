{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authSuccess = (idToken, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: idToken,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(authLogout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBNzOUD49icpz_sGzBnsSvBW12R1UPS5kU';\n\n    if (!isSignup) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBNzOUD49icpz_sGzBnsSvBW12R1UPS5kU';\n    }\n\n    ;\n    axios.post(url, authData).then(response => {\n      console.log(response);\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userId', response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(error => {\n      // console.log(error);\n      // console.log(error.response);\n      dispatch(authFail(error.response.data.error));\n    });\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n    if (!token) {\n      dispatch(authLogout());\n    } else {\n      if (expirationDate > new Date()) {\n        dispatch(authSuccess(token, userId));\n        dispatch(checkAuthTimeout(expirationDate.getSeconds() - new Date().getSeconds()));\n      } else {\n        dispatch(authLogout());\n      }\n\n      ;\n    }\n\n    ;\n  };\n};","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/store/actions/auth.js"],"names":["actionTypes","axios","authSuccess","idToken","userId","type","AUTH_SUCCESS","authFail","error","AUTH_FAIL","authStart","AUTH_START","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogout","localStorage","removeItem","AUTH_LOGOUT","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","console","log","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","token","getItem","getSeconds"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC5C,SAAM;AACFC,IAAAA,IAAI,EAAEL,WAAW,CAACM,YADhB;AAEFH,IAAAA,OAAO,EAAEA,OAFP;AAGFC,IAAAA,MAAM,EAAEA;AAHN,GAAN;AAKH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAM;AACFH,IAAAA,IAAI,EAAEL,WAAW,CAACS,SADhB;AAEFD,IAAAA,KAAK,EAAEA;AAFL,GAAN;AAIH,CALM;AAOP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC3B,SAAM;AACFL,IAAAA,IAAI,EAAEL,WAAW,CAACW;AADhB,GAAN;AAGH,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAIC,cAAD,IAAoB;AAChD,SAAOC,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,CAACE,UAAU,EAAX,CAAR;AACH,KAFS,EAEPH,cAAc,GAAC,IAFR,CAAV;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMG,UAAU,GAAG,MAAM;AAC5BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACA,SAAO;AACHb,IAAAA,IAAI,EAAEL,WAAW,CAACmB;AADf,GAAP;AAGH,CAPM;AASP,OAAO,MAAMC,IAAI,GAAE,CAAEC,KAAF,EAASC,QAAT,EAAmBC,QAAnB,KAAgC;AAC/C,SAAOT,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACA,UAAMc,QAAQ,GAAG;AACbH,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbG,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAKA,QAAIC,GAAG,GAAG,uGAAV;;AACA,QAAG,CAACH,QAAJ,EAAa;AACTG,MAAAA,GAAG,GAAG,mHAAN;AACH;;AAAA;AACDzB,IAAAA,KAAK,CAAC0B,IAAN,CAAWD,GAAX,EAAgBF,QAAhB,EACCI,IADD,CACMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMG,cAAc,GAAG,IAAIC,IAAJ,CAAU,IAAIA,IAAJ,GAAWC,OAAX,KAAuBL,QAAQ,CAACM,IAAT,CAAcC,SAAd,GAA0B,IAA3D,CAAvB;AACAnB,MAAAA,YAAY,CAACoB,OAAb,CAAqB,OAArB,EAA8BR,QAAQ,CAACM,IAAT,CAAchC,OAA5C;AACAc,MAAAA,YAAY,CAACoB,OAAb,CAAqB,gBAArB,EAAuCL,cAAvC;AACAf,MAAAA,YAAY,CAACoB,OAAb,CAAqB,QAArB,EAA+BR,QAAQ,CAACM,IAAT,CAAcG,OAA7C;AACAxB,MAAAA,QAAQ,CAACZ,WAAW,CAAC2B,QAAQ,CAACM,IAAT,CAAchC,OAAf,EAAwB0B,QAAQ,CAACM,IAAT,CAAcG,OAAtC,CAAZ,CAAR;AACAxB,MAAAA,QAAQ,CAACF,gBAAgB,CAACiB,QAAQ,CAACM,IAAT,CAAcC,SAAf,CAAjB,CAAR;AACH,KATD,EAUCG,KAVD,CAUO/B,KAAK,IAAI;AACZ;AACA;AACAM,MAAAA,QAAQ,CAACP,QAAQ,CAACC,KAAK,CAACqB,QAAN,CAAeM,IAAf,CAAoB3B,KAArB,CAAT,CAAR;AACH,KAdD;AAeH,GA1BD;AA2BH,CA5BM;AA8BP,OAAO,MAAMgC,mBAAmB,GAAIC,IAAD,IAAU;AACzC,SAAO;AACHpC,IAAAA,IAAI,EAAEL,WAAW,CAAC0C,sBADf;AAEHD,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,cAAc,GAAG,MAAM;AAChC,SAAO7B,QAAQ,IAAI;AACf,UAAM8B,KAAK,GAAG3B,YAAY,CAAC4B,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMzC,MAAM,GAAGa,YAAY,CAAC4B,OAAb,CAAqB,QAArB,CAAf;AACA,UAAMb,cAAc,GAAG,IAAIC,IAAJ,CAAUhB,YAAY,CAAC4B,OAAb,CAAqB,gBAArB,CAAV,CAAvB;;AACA,QAAG,CAACD,KAAJ,EAAU;AACN9B,MAAAA,QAAQ,CAACE,UAAU,EAAX,CAAR;AACH,KAFD,MAEO;AACH,UAAGgB,cAAc,GAAE,IAAIC,IAAJ,EAAnB,EAA8B;AAC1BnB,QAAAA,QAAQ,CAACZ,WAAW,CAAC0C,KAAD,EAAQxC,MAAR,CAAZ,CAAR;AACAU,QAAAA,QAAQ,CAACF,gBAAgB,CAACoB,cAAc,CAACc,UAAf,KAA8B,IAAIb,IAAJ,GAAWa,UAAX,EAA/B,CAAjB,CAAR;AACH,OAHD,MAGO;AACHhC,QAAAA,QAAQ,CAAEE,UAAU,EAAZ,CAAR;AACH;;AAAA;AACJ;;AAAA;AACJ,GAdD;AAeH,CAhBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authSuccess = (idToken, userId) => {\n    return{\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: idToken,\n        userId: userId\n        };\n};\n\nexport const authFail = (error) => {\n    return{\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n        };\n};\n\nexport const authStart = () => {\n    return{\n        type: actionTypes.AUTH_START,\n        };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout());\n        }, expirationTime*1000);\n    };\n};\n\nexport const authLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n    }\n}\n\nexport const auth =( email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true,\n        };\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBNzOUD49icpz_sGzBnsSvBW12R1UPS5kU';\n        if(!isSignup){\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBNzOUD49icpz_sGzBnsSvBW12R1UPS5kU'\n        };\n        axios.post(url, authData)\n        .then(response => {\n            console.log(response);\n            const expirationDate = new Date (new Date().getTime() + response.data.expiresIn * 1000);\n            localStorage.setItem('token', response.data.idToken);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('userId', response.data.localId)\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n            dispatch(checkAuthTimeout(response.data.expiresIn))\n        })\n        .catch(error => {\n            // console.log(error);\n            // console.log(error.response);\n            dispatch(authFail(error.response.data.error));\n        })\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path,\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        const userId = localStorage.getItem('userId');\n        const expirationDate = new Date (localStorage.getItem('expirationDate'));\n        if(!token){\n            dispatch(authLogout());\n        } else {\n            if(expirationDate> new Date()){\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout(expirationDate.getSeconds() - new Date().getSeconds()))\n            } else {\n                dispatch (authLogout());\n            };\n        };\n    };\n}"]},"metadata":{},"sourceType":"module"}