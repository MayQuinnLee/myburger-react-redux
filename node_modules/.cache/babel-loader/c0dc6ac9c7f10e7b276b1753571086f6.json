{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/myburger-react/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/orders.json').then(res => {\n      //firebase will return object and we convert to array\n      const fetchedOrders = []; // console.log(res.data);\n\n      for (let key in res.data) {\n        fetchedOrders.push({ ...res.data[key],\n          id: key\n        });\n      }\n\n      console.log(fetchedOrders);\n      this.setState({\n        loading: false,\n        orders: fetchedOrders\n      });\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.orders.map(order => React.createElement(Order, {\n      key: order.id,\n      price: +order.price,\n      ingredients: order.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withErrorHandler(Orders, axios);","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","Orders","state","orders","loading","componentDidMount","get","then","res","fetchedOrders","key","data","push","id","console","log","setState","catch","err","render","map","order","price","ingredients"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAK3BC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,KAAK,CAACO,GAAN,CAAU,cAAV,EACKC,IADL,CACUC,GAAG,IAAE;AACP;AACA,YAAMC,aAAa,GAAE,EAArB,CAFO,CAGP;;AACA,WAAI,IAAIC,GAAR,IAAeF,GAAG,CAACG,IAAnB,EAAwB;AACpBF,QAAAA,aAAa,CAACG,IAAd,CAAmB,EACf,GAAGJ,GAAG,CAACG,IAAJ,CAASD,GAAT,CADY;AAEfG,UAAAA,EAAE,EAAEH;AAFW,SAAnB;AAIH;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACA,WAAKO,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAE,KAAV;AAAiBD,QAAAA,MAAM,EAAEM;AAAzB,OAAd;AACH,KAbL,EAcKQ,KAdL,CAcWC,GAAG,IAAE;AACR,WAAKF,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAhBL;AAiBH;;AAEDe,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAsBC,KAAK,IACxB,oBAAC,KAAD;AACA,MAAA,GAAG,EAAEA,KAAK,CAACR,EADX;AAEA,MAAA,KAAK,EAAE,CAACQ,KAAK,CAACC,KAFd;AAGA,MAAA,WAAW,EAAGD,KAAK,CAACE,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAWH;;AAtC0B;;AAyC/B,eAAevB,gBAAgB,CAACC,MAAD,EAAQF,KAAR,CAA/B","sourcesContent":["import React, {Component} from 'react';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res=>{\n                //firebase will return object and we convert to array\n                const fetchedOrders =[];\n                // console.log(res.data);\n                for(let key in res.data){\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key,\n                    });\n                }\n                console.log(fetchedOrders);\n                this.setState({loading: false, orders: fetchedOrders})\n            })\n            .catch(err=>{\n                this.setState({loading: false})\n            })\n    }\n\n    render() {\n\n        return(\n            <div>\n                {this.state.orders.map(order => ( \n                    <Order \n                    key={order.id}\n                    price={+order.price}\n                    ingredients= {order.ingredients} />\n                    ))\n                }\n            </div>\n        )\n    }\n}\n\nexport default withErrorHandler(Orders,axios);"]},"metadata":{},"sourceType":"module"}