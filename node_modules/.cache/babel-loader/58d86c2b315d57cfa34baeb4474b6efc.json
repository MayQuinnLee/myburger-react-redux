{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/myburger-react-redux/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as burgerBuilderActions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  updatePurchaseState() {\n    const sum = Object.keys(this.props.ings).map(igKey => {\n      return this.props.ings[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  }\n\n  //this is only passing into the URL\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    let orderSummary = null;\n    let burger = this.props.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Ingredients can't be loaded \") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.props.onAddIngredient,\n        ingredientRemoved: this.props.onRemoveIngredient,\n        disabled: disabledInfo,\n        purchasable: this.updatePurchaseState(),\n        ordered: this.purchaseHandler,\n        price: this.props.totalP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.props.totalP,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    totalP: state.totalPrice,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddIngredient: ingType => dispatch(burgerBuilderActions.addIng(ingType)),\n    onRemoveIngredient: ingType => dispatch(burgerBuilderActions.removeIng(ingType)),\n    onSetIngredient: () => dispatch(burgerBuilderActions.initIng())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","burgerBuilderActions","axios","BurgerBuilder","state","purchasing","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","props","history","push","componentDidMount","console","log","updatePurchaseState","sum","Object","keys","ings","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger","error","onAddIngredient","onRemoveIngredient","totalP","mapStateToProps","ingredients","totalPrice","mapDispatchToProps","dispatch","ingType","addIng","removeIng","onSetIngredient","initIng"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as burgerBuilderActions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        purchasing: false,\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n    }\n\n    updatePurchaseState () {\n        const sum = Object.keys(this.props.ings)\n            .map( igKey => {\n                return this.props.ings[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/checkout');\n    }\n        //this is only passing into the URL\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key]= disabledInfo[key] <= 0\n        }\n        // {salad: true, meat: false, ...}\n\n        let orderSummary = null;\n\n\n        let burger = this.props.error ? <p> Ingredients can't be loaded </p> : <Spinner />\n\n        if(this.props.ings){\n            burger = (\n              <Aux>\n                <Burger ingredients={this.props.ings} />\n                <BuildControls\n                  ingredientAdded={this.props.onAddIngredient}\n                  ingredientRemoved={this.props.onRemoveIngredient}\n                  disabled={disabledInfo}\n                  purchasable={this.updatePurchaseState()}\n                  ordered={this.purchaseHandler}\n                  price={this.props.totalP}\n                />\n              </Aux>\n            );\n            orderSummary = (<OrderSummary\n                    ingredients={this.props.ings}\n                    price={this.props.totalP}\n                    purchaseCancelled={this.purchaseCancelHandler}\n                    purchaseContinued={this.purchaseContinueHandler}\n                />\n            );\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}              \n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        totalP: state.totalPrice,\n        error: state.error,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddIngredient: (ingType) => dispatch(burgerBuilderActions.addIng(ingType)),\n        onRemoveIngredient: (ingType) => dispatch(burgerBuilderActions.removeIng(ingType)),\n        onSetIngredient: () => dispatch(burgerBuilderActions.initIng())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));"]},"metadata":{},"sourceType":"module"}