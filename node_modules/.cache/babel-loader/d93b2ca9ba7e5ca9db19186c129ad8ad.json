{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIng = (state, action) => {\n  const updatedIngredient = {\n    [action.ingType]: state.ingredients[action.ingType] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIng = (state, action) => {\n  const updatedIng = {\n    [action.ingType]: state.ingredients[action.ingType] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType]\n  };\n  return updateObject(state, updatedSt);\n};\n\nc;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_ING:\n      return addIng(state, action);\n\n    case actionTypes.REMOVE_ING:\n      return removeIng(state, action);\n\n    case actionTypes.SET_ING:\n      return updateObject(state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          meat: action.ingredients.meat,\n          cheese: action.ingredients.cheese\n        },\n        error: false,\n        totalPrice: 4\n      });\n\n    case actionTypes.FETCH_ING_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIng","state","action","updatedIngredient","ingType","updatedIngredients","updatedState","removeIng","updatedIng","updatedIngs","updatedSt","c","reducer","type","ADD_ING","REMOVE_ING","SET_ING","FETCH_ING_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,QAAMC,iBAAiB,GAAG;AAAE,KAACD,MAAM,CAACE,OAAR,GAAkBH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,OAAzB,IAAoC;AAAxD,GAA1B;AACA,QAAMC,kBAAkB,GAAGf,YAAY,CAACW,KAAK,CAACT,WAAP,EAAmBW,iBAAnB,CAAvC;AACA,QAAMG,YAAY,GAAG;AACjBd,IAAAA,WAAW,EAAEa,kBADI;AAEjBZ,IAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,OAAR;AAF/B,GAArB;AAIA,SAAOd,YAAY,CAACW,KAAD,EAAQK,YAAR,CAAnB;AACH,CARD;;AAUA,MAAMC,SAAS,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACjC,QAAMM,UAAU,GAAG;AAAE,KAACN,MAAM,CAACE,OAAR,GAAkBH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,OAAzB,IAAoC;AAAxD,GAAnB;AACA,QAAMK,WAAW,GAAGnB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAmBgB,UAAnB,CAAhC;AACA,QAAME,SAAS,GAAG;AACdlB,IAAAA,WAAW,EAAEiB,WADC;AAEdhB,IAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,OAAR;AAFlC,GAAlB;AAIA,SAAOd,YAAY,CAACW,KAAD,EAAQS,SAAR,CAAnB;AACH,CARD;;AAUAC,CAAC;;AACD,MAAMC,OAAO,GAAG,CAACX,KAAK,GAACV,YAAP,EAAqBW,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACW,IAAd;AACI,SAAKxB,WAAW,CAACyB,OAAjB;AACI,aAAOd,MAAM,CAACC,KAAD,EAAQC,MAAR,CAAb;;AACJ,SAAKb,WAAW,CAAC0B,UAAjB;AACI,aAAOR,SAAS,CAACN,KAAD,EAAOC,MAAP,CAAhB;;AACJ,SAAKb,WAAW,CAAC2B,OAAjB;AACI,aAAO1B,YAAY,CAACW,KAAD,EAAQ;AACvBT,QAAAA,WAAW,EAAE;AACTI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADjB;AAETG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFjB;AAGTD,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM,IAHhB;AAITD,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK;AAJlB,SADU;AAMvBH,QAAAA,KAAK,EAAE,KANgB;AAOvBD,QAAAA,UAAU,EAAE;AAPW,OAAR,CAAnB;;AASJ,SAAKJ,WAAW,CAAC4B,gBAAjB;AACI,aAAO3B,YAAY,CAACW,KAAD,EAAQ;AAACP,QAAAA,KAAK,EAAE;AAAR,OAAR,CAAnB;;AACJ;AACI,aAAOO,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,eAAeW,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIng = (state, action) => {\n    const updatedIngredient = { [action.ingType]: state.ingredients[action.ingType] + 1 };\n    const updatedIngredients = updateObject(state.ingredients,updatedIngredient);\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType]\n    };\n    return updateObject(state, updatedState);\n}\n\nconst removeIng = (state, action) => {\n    const updatedIng = { [action.ingType]: state.ingredients[action.ingType] - 1 };\n    const updatedIngs = updateObject(state.ingredients,updatedIng);\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType]\n    };\n    return updateObject(state, updatedSt);\n}\n\nc\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_ING:\n            return addIng(state, action);\n        case actionTypes.REMOVE_ING:\n            return removeIng(state,action);\n        case actionTypes.SET_ING:\n            return updateObject(state, {\n                ingredients: {\n                    salad: action.ingredients.salad,\n                    bacon: action.ingredients.bacon,\n                    meat: action.ingredients.meat,\n                    cheese: action.ingredients.cheese},\n                error: false,\n                totalPrice: 4\n            })\n        case actionTypes.FETCH_ING_FAILED:\n            return updateObject(state, {error: true})\n        default: \n            return state\n    }\n}\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}