{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/myburger-react-redux/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.onFetchOrder();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.state.orders.map(order => React.createElement(Order, {\n      key: order.id,\n      price: +order.price,\n      ingredients: order.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrder: () => dispatch(actions.fetchOrders)\n  };\n};\n\nexport default withErrorHandler(Orders, axios);","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","axios","withErrorHandler","actions","Orders","state","orders","loading","componentDidMount","props","onFetchOrder","render","map","order","id","price","ingredients","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BO,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADmB;AAAA;;AAK3BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,YAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,KAAL,CAAWC,MAAX,CAAkBM,GAAlB,CAAsBC,KAAK,IACxB,oBAAC,KAAD;AACA,MAAA,GAAG,EAAEA,KAAK,CAACC,EADX;AAEA,MAAA,KAAK,EAAE,CAACD,KAAK,CAACE,KAFd;AAGA,MAAA,WAAW,EAAGF,KAAK,CAACG,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAWH;;AAtB0B;;AAyB/B,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHR,IAAAA,YAAY,EAAE,MAAMQ,QAAQ,CAACf,OAAO,CAACgB,WAAT;AADzB,GAAP;AAGH,CAJD;;AAMA,eAAejB,gBAAgB,CAACE,MAAD,EAAQH,KAAR,CAA/B","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux'\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n    componentDidMount() {\n        this.props.onFetchOrder()\n    }\n\n    render() {\n\n        return(\n            <div>\n                {this.state.orders.map(order => ( \n                    <Order \n                    key={order.id}\n                    price={+order.price}\n                    ingredients= {order.ingredients} />\n                    ))\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrder: () => dispatch(actions.fetchOrders)\n    }\n}\n\nexport default withErrorHandler(Orders,axios);"]},"metadata":{},"sourceType":"module"}