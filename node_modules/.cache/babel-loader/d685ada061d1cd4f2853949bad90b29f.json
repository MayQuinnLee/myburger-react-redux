{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIng = (state, action) => {\n  const updatedIngredient = {\n    [action.ingType]: state.ingredients[action.ingType] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIng = (state, action) => {\n  const updatedIng = {\n    [action.ingType]: state.ingredients[action.ingType] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType],\n    building: true\n  };\n  return updateObject(state, updatedSt);\n};\n\nconst setIng = (state, action) => {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      meat: action.ingredients.meat,\n      cheese: action.ingredients.cheese\n    },\n    error: false,\n    totalPrice: 4,\n    building: false\n  });\n};\n\nconst fetchIngFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_ING:\n      return addIng(state, action);\n\n    case actionTypes.REMOVE_ING:\n      return removeIng(state, action);\n\n    case actionTypes.SET_ING:\n      return setIng(state, action);\n\n    case actionTypes.FETCH_ING_FAILED:\n      return fetchIngFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIng","state","action","updatedIngredient","ingType","updatedIngredients","updatedState","removeIng","updatedIng","updatedIngs","updatedSt","setIng","fetchIngFailed","reducer","type","ADD_ING","REMOVE_ING","SET_ING","FETCH_ING_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false,\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIng = (state, action) => {\n    const updatedIngredient = { [action.ingType]: state.ingredients[action.ingType] + 1 };\n    const updatedIngredients = updateObject(state.ingredients,updatedIngredient);\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType],\n        building: true,\n    };\n    return updateObject(state, updatedState);\n}\n\nconst removeIng = (state, action) => {\n    const updatedIng = { [action.ingType]: state.ingredients[action.ingType] - 1 };\n    const updatedIngs = updateObject(state.ingredients,updatedIng);\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType],\n        building: true\n    };\n    return updateObject(state, updatedSt);\n}\n\nconst setIng = (state,action) => {\n    return updateObject(state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            meat: action.ingredients.meat,\n            cheese: action.ingredients.cheese},\n        error: false,\n        totalPrice: 4,\n        building: false,\n    })\n}\n\nconst fetchIngFailed = (state, action) => {\n    return updateObject(state, {error: true})\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_ING: return addIng(state, action);\n        case actionTypes.REMOVE_ING: return removeIng(state,action);\n        case actionTypes.SET_ING: return setIng(state,action);\n        case actionTypes.FETCH_ING_FAILED: return fetchIngFailed(state,action);\n        default: return state\n    }\n}\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}