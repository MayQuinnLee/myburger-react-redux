{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/myburger-react-redux/src/hoc/Layout/Layout.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSideDrawer: false\n    };\n\n    this.sideDrawerCloseHandler = () => this.setState({\n      showSideDrawer: false\n    });\n\n    this.sideDrawerToggler = () => {\n      this.setState(prevState => {\n        return {\n          showSideDrawer: !prevState.showSideDrawer\n        };\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      isAuth: this.props.isAuthenticated,\n      drawerToggleClicked: this.sideDrawerToggler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      isAuth: this.props.isAuthenticated,\n      open: this.state.showSideDrawer,\n      closed: this.sideDrawerCloseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: classes.Content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null //isAuthenticated is true\n\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/hoc/Layout/Layout.js"],"names":["React","Component","connect","Aux","classes","Toolbar","SideDrawer","Layout","state","showSideDrawer","sideDrawerCloseHandler","setState","sideDrawerToggler","prevState","render","props","isAuthenticated","Content","children","mapStateToProps","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BO,KAD2B,GACnB;AACJC,MAAAA,cAAc,EAAE;AADZ,KADmB;;AAAA,SAK3BC,sBAL2B,GAKH,MACpB,KAAKC,QAAL,CAAc;AAACF,MAAAA,cAAc,EAAE;AAAjB,KAAd,CANuB;;AAAA,SAS3BG,iBAT2B,GASR,MAAM;AACrB,WAAKD,QAAL,CAAeE,SAAD,IAAa;AACvB,eAAO;AAACJ,UAAAA,cAAc,EAAE,CAACI,SAAS,CAACJ;AAA5B,SAAP;AACH,OAFD;AAGH,KAb0B;AAAA;;AAe3BK,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACA,MAAA,MAAM,EAAG,KAAKC,KAAL,CAAWC,eADpB;AAEA,MAAA,mBAAmB,EAAG,KAAKJ,iBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,UAAD;AACA,MAAA,MAAM,EAAG,KAAKG,KAAL,CAAWC,eADpB;AAEA,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,cAFjB;AAGA,MAAA,MAAM,EAAE,KAAKC,sBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAQI;AAAM,MAAA,SAAS,EAAEN,OAAO,CAACa,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWG,QADhB,CARJ,CADJ;AAeH;;AA/B0B;;AAgC9B;;AAED,MAAMC,eAAe,GAAGX,KAAK,IAAI;AAC7B,SAAM;AACFQ,IAAAA,eAAe,EAAER,KAAK,CAACY,IAAN,CAAWC,KAAX,KAAqB,IADpC,CAC0C;;AAD1C,GAAN;AAGH,CAJD;;AAMA,eAAenB,OAAO,CAACiB,eAAD,CAAP,CAAyBZ,MAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../Aux/Aux';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    };\r\n    \r\n    sideDrawerCloseHandler =() => (\r\n        this.setState({showSideDrawer: false})\r\n    );\r\n\r\n    sideDrawerToggler =() => {\r\n        this.setState((prevState)=>{\r\n            return {showSideDrawer: !prevState.showSideDrawer}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Aux>\r\n                <Toolbar \r\n                isAuth= {this.props.isAuthenticated}\r\n                drawerToggleClicked ={this.sideDrawerToggler}/>\r\n                <SideDrawer \r\n                isAuth= {this.props.isAuthenticated}\r\n                open={this.state.showSideDrawer} \r\n                closed={this.sideDrawerCloseHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                    {/*wrapping all the children into 'layout' components*/}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isAuthenticated: state.auth.token !== null, //isAuthenticated is true\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);"]},"metadata":{},"sourceType":"module"}