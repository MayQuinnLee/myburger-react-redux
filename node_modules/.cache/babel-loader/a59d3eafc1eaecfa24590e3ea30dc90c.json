{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/myburger-react/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      address: {\n        street: '',\n        postalCode: ''\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault(); //As a default in <Form> it will rerender itself, so we prevent the default\n\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price,\n        customer: {\n          name: 'Jovan Goh',\n          address: {\n            street: 'TestStreet',\n            zipCode: 56330,\n            country: 'Malaysia'\n          },\n          email: 'jojo@test.com'\n        },\n        deliveryMethod: 'ASAP'\n      };\n      axios.post('/orders.json', order) //.json for firebase only\n      .then(response => {\n        this.setState({\n          loading: false\n        });\n        console.log(response);\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    let form = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: classes.Input,\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: classes.Input,\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Your Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: classes.Input,\n      type: \"text\",\n      name: \"street\",\n      placeholder: \"Street\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: classes.Input,\n      type: \"text\",\n      name: \"postalCode\",\n      placeholder: \"Postal Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"ORDER\"));\n\n    if (this.state.loading) {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      className: classes.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Please enter your Contact Data\"));\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","ContactData","state","name","email","address","street","postalCode","loading","orderHandler","event","preventDefault","setState","order","ingredients","props","price","customer","zipCode","country","deliveryMethod","post","then","response","console","log","catch","error","render","form","Input"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\n\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\n\nclass ContactData extends Component {\n    state = {\n        name: '',\n        email: '',\n        address : {\n            street: '',\n            postalCode: '',\n        },\n        loading: false,\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        //As a default in <Form> it will rerender itself, so we prevent the default\n        this.setState({loading: true})\n        const order = {\n            ingredients: this.props.ingredients, \n            price: this.props.price,\n            customer: {\n                name: 'Jovan Goh',\n                address: {\n                    street: 'TestStreet',\n                    zipCode: 56330,\n                    country: 'Malaysia',\n                },\n                email: 'jojo@test.com',\n            },\n            deliveryMethod: 'ASAP',\n        }\n\n        axios.post('/orders.json', order) //.json for firebase only\n            .then(response => {\n                this.setState({loading: false});\n                console.log(response);\n            })\n            .catch(error => {\n                this.setState({loading: false})\n            })\n    };\n\n    render () {\n\n        let form = (\n            <form>\n              <input className={classes.Input} type=\"text\" name=\"name\" placeholder=\"Your Name\" />\n              <input className={classes.Input} type=\"text\" name=\"email\" placeholder=\"Your Email\" />\n              <input className={classes.Input} type=\"text\" name=\"street\" placeholder=\"Street\" />\n              <input className={classes.Input} type=\"text\" name=\"postalCode\" placeholder=\"Postal Code\" />\n              <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\n            </form>\n        );\n        if(this.state.loading){\n            form = <Spinner />\n        };\n        return (\n          <div className={classes.ContactData}>\n            <h4> Please enter your Contact Data</h4>\n\n          </div>\n        );\n    }\n}\n\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}