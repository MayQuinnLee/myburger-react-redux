{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/myburger-react/src/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  //we expect to receive 2 arguments = burgerbuilder & axios\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    //Based on LifeCycleHook, componentDidMount will only work when all the children (WrappedComponent) has been rendered, when an error occur before children could be render, this hook below will not work\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req; //when sending request, we have to return the request so that the request can continue\n      }); //not concern on the request, but want to clear the error\n\n      this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    render() {\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.error,\n        modalClosed: this.errorConfirmedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.error ? this.state.error.message : null), React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Aux","Modal","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","componentWillMount","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","componentWillUnmount","eject","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AAAA;;AAClD;AACA,iBAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC3BM,KAD2B,GACnB;AACJC,QAAAA,KAAK,EAAE;AADH,OADmB;;AAAA,WAyB3BC,qBAzB2B,GAyBJ,MAAK;AACxB,aAAKC,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAC;AAAP,SAAd;AACH,OA3B0B;AAAA;;AAK3B;AACAG,IAAAA,kBAAkB,GAAI;AAClB,WAAKC,cAAL,GAAsBN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,GAAG,IAAI;AACxD,aAAKN,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAE;AAAR,SAAd;AACA,eAAOQ,GAAP,CAFwD,CAGxD;AACH,OAJqB,CAAtB,CADkB,CAKf;;AACH,WAAKC,cAAL,GAAsBX,KAAK,CAACO,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CACpBI,GAAG,IAAIA,GADa,EAEpBX,KAAK,IAAI;AACP,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD,OAJmB,CAAtB;AAMH;;AAEDY,IAAAA,oBAAoB,GAAI;AACpBd,MAAAA,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BO,KAA3B,CAAiC,KAAKT,cAAtC;AACAN,MAAAA,KAAK,CAACO,YAAN,CAAmBK,QAAnB,CAA4BG,KAA5B,CAAkC,KAAKJ,cAAvC;AACH;;AAMDK,IAAAA,MAAM,GAAI;AACN,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACA,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWC,KADjB;AAEA,QAAA,WAAW,EAAE,KAAKC,qBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGK,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,OAApC,GAA8C,IAHnD,CADJ,EAOI,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPJ,CADJ;AAWH;;AAzC0B,GAA/B;AA4CH,CA9CD;;AAgDA,eAAepB,gBAAf","sourcesContent":["import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux/Aux'\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => { \n    //we expect to receive 2 arguments = burgerbuilder & axios\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n        //Based on LifeCycleHook, componentDidMount will only work when all the children (WrappedComponent) has been rendered, when an error occur before children could be render, this hook below will not work\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n                //when sending request, we have to return the request so that the request can continue\n            }) //not concern on the request, but want to clear the error\n            this.resInterceptor = axios.interceptors.response.use(\n              res => res,\n              error => {\n                this.setState({ error: error });\n              }\n            );\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler =() =>{\n            this.setState({error:null})\n        }\n\n        render () {\n            return (\n                <Aux> \n                    <Modal \n                    show={this.state.error}\n                    modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null} \n                        {/*message property return by Firebase*/}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n\n    }\n}\n\nexport default withErrorHandler;"]},"metadata":{},"sourceType":"module"}