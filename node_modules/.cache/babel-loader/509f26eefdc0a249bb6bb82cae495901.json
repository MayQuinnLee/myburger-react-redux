{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport const purchaseBurgerStart = orderData => {\n  return dispatch => {\n    axios.post('/orders.json', orderData) //.json for firebase only\n    .then(response => {\n      dispatch(purchaseBurgerSuccess(id, orderData));\n    }).catch(error => {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","dispatch","post","then","response","catch"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACpD,SAAM;AACFC,IAAAA,IAAI,EAAEL,WAAW,CAACM,uBADhB;AAEFC,IAAAA,OAAO,EAAEJ,EAFP;AAGFC,IAAAA,SAAS,EAAEA;AAHT,GAAN;AAKH,CANM;AAQP,OAAO,MAAMI,kBAAkB,GAAIC,KAAD,IAAW;AACzC,SAAM;AACFJ,IAAAA,IAAI,EAAEL,WAAW,CAACU,oBADhB;AAEFD,IAAAA,KAAK,EAAEA;AAFL,GAAN;AAIH,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAIP,SAAD,IAAe;AAC9C,SAAOQ,QAAQ,IAAI;AACfX,IAAAA,KAAK,CAACY,IAAN,CAAW,cAAX,EAA2BT,SAA3B,EAAsC;AAAtC,KACCU,IADD,CACMC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACV,qBAAqB,CAACC,EAAD,EAAKC,SAAL,CAAtB,CAAR;AACH,KAHD,EAICY,KAJD,CAIOP,KAAK,IAAI;AACZG,MAAAA,QAAQ,CAACJ,kBAAkB,CAACC,KAAD,CAAnB,CAAR;AACH,KAND;AAOH,GARD;AASH,CAVM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return{\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return{\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = (orderData) => {\n    return dispatch => {\n        axios.post('/orders.json', orderData) //.json for firebase only\n        .then(response => {\n            dispatch(purchaseBurgerSuccess(id, orderData))\n        })\n        .catch(error => {\n            dispatch(purchaseBurgerFail(error))\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}