{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_ING:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingType]: state.ingredients[action.ingType] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType]\n      };\n\n    case actionTypes.REMOVE_ING:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingType]: state.ingredients[action.ingType] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingType]\n      };\n\n    case actionTypes.SET_ING:\n      return { ...state,\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          meat: action.ingredients.meat,\n          cheese: action.ingredients.cheese\n        },\n        error: false\n      };\n\n    case actionTypes.FETCH_ING_FAILED:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_ING","ingType","REMOVE_ING","SET_ING","FETCH_ING_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACV,YAAP,EAAqBW,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,WAAW,CAACc,OAAjB;AACI,aAAM,EACF,GAAGH,KADD;AAEFT,QAAAA,WAAW,EAAE,EACT,GAAGS,KAAK,CAACT,WADA;AAET,WAACU,MAAM,CAACG,OAAR,GAAkBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,OAAzB,IAAoC;AAF7C,SAFX;AAMFZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,OAAR;AAN9C,OAAN;;AAQJ,SAAKf,WAAW,CAACgB,UAAjB;AACI,aAAM,EACF,GAAGL,KADD;AAEFT,QAAAA,WAAW,EAAE,EACT,GAAGS,KAAK,CAACT,WADA;AAET,WAACU,MAAM,CAACG,OAAR,GAAkBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,OAAzB,IAAoC;AAF7C,SAFX;AAMFZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,OAAR;AAN9C,OAAN;;AAQJ,SAAKf,WAAW,CAACiB,OAAjB;AACI,aAAM,EACF,GAAGN,KADD;AAEFT,QAAAA,WAAW,EAAE;AACTI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADjB;AAETG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFjB;AAGTD,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM,IAHhB;AAITD,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK;AAJlB,SAFX;AAQFH,QAAAA,KAAK,EAAE;AARL,OAAN;;AAUJ,SAAKJ,WAAW,CAACkB,gBAAjB;AACI,aAAM,EACF,GAAGP,KADD;AAEFP,QAAAA,KAAK,EAAE;AAFL,OAAN;;AAIJ;AACI,aAAOO,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_ING:\n            return{\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingType]: state.ingredients[action.ingType] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingType]\n            }\n        case actionTypes.REMOVE_ING:\n            return{\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingType]: state.ingredients[action.ingType] - 1\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingType]\n            }\n        case actionTypes.SET_ING:\n            return{\n                ...state,\n                ingredients: {\n                    salad: action.ingredients.salad,\n                    bacon: action.ingredients.bacon,\n                    meat: action.ingredients.meat,\n                    cheese: action.ingredients.cheese,\n                },\n                error: false\n            }\n        case actionTypes.FETCH_ING_FAILED:\n            return{\n                ...state,\n                error: true\n            }\n        default: \n            return state\n    }\n}\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}