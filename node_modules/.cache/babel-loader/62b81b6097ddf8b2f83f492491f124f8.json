{"ast":null,"code":"import * as actionTypes from './actionTypes';\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport const purchaseBurgerStart = orderData => {\n  return dispatch => {\n    axios.post('/orders.json', orderData) //.json for firebase only\n    .then(response => {\n      this.setState({\n        loading: false\n      });\n      this.props.history.push('/');\n    }).catch(error => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/store/actions/order.js"],"names":["actionTypes","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","dispatch","axios","post","then","response","setState","loading","props","history","push","catch"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACpD,SAAM;AACFC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,uBADhB;AAEFC,IAAAA,OAAO,EAAEJ,EAFP;AAGFC,IAAAA,SAAS,EAAEA;AAHT,GAAN;AAKH,CANM;AAQP,OAAO,MAAMI,kBAAkB,GAAIC,KAAD,IAAW;AACzC,SAAM;AACFJ,IAAAA,IAAI,EAAEJ,WAAW,CAACS,oBADhB;AAEFD,IAAAA,KAAK,EAAEA;AAFL,GAAN;AAIH,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAIP,SAAD,IAAe;AAC9C,SAAOQ,QAAQ,IAAI;AACfC,IAAAA,KAAK,CAACC,IAAN,CAAW,cAAX,EAA2BV,SAA3B,EAAsC;AAAtC,KACCW,IADD,CACMC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,KAJD,EAKCC,KALD,CAKOb,KAAK,IAAI;AACZ,WAAKQ,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAPD;AAQH,GATD;AAUH,CAXM","sourcesContent":["import * as actionTypes from './actionTypes';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return{\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return{\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = (orderData) => {\n    return dispatch => {\n        axios.post('/orders.json', orderData) //.json for firebase only\n        .then(response => {\n            this.setState({loading: false});\n            this.props.history.push('/');\n        })\n        .catch(error => {\n            this.setState({loading: false})\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}