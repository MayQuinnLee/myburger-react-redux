{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/myburger-react/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'ZIP Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your E-mail'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault(); //As a default in <Form> it will rerender itself, so we prevent the default\n\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price\n      };\n      axios.post('/orders.json', order) //.json for firebase only\n      .then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedOrderForm = { ...this.state.orderForm\n      };\n      const updatedFormElement = { ...updatedOrderForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n      this.setState({\n        orderForm: updatedOrderForm\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = React.createElement(\"form\", {\n      onSubmit: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, formElementsArray.map(formElement => React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Button, {\n      btnType: \"Success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"ORDER\"));\n\n    if (this.state.loading) {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      className: classes.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" Please enter your Contact Data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","setState","order","ingredients","props","price","post","then","response","history","push","catch","error","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","render","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\n\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {   \n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: ''\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: ''\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: ''\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: ''\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your E-mail'\n                },\n                value: ''\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue:'Fastest'},\n                        {value: 'cheapest', displayValue:'Cheapest'}\n                    ]\n                },\n                value: ''\n            },\n        },\n        loading: false,\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        //As a default in <Form> it will rerender itself, so we prevent the default\n        this.setState({loading: true})\n        \n        \n        const order = {\n            ingredients: this.props.ingredients, \n            price: this.props.price}\n        axios.post('/orders.json', order) //.json for firebase only\n            .then(response => {\n                this.setState({loading: false});\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                this.setState({loading: false})\n            })\n    };\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {...this.state.orderForm};\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\n        updatedFormElement.value = event.target.value;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        this.setState({orderForm:updatedOrderForm})\n    }\n\n    render () {\n        const formElementsArray=[];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key],\n            })\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n              {formElementsArray.map(formElement=>(\n                  <Input \n                  key={formElement.id}\n                  elementType={formElement.config.elementType}\n                  elementConfig={formElement.config.elementConfig}\n                  value={formElement.config.value}\n                  changed={(event)=>this.inputChangedHandler(event, formElement.id)}/>\n                ))}\n              <Button btnType=\"Success\">ORDER</Button>\n            </form>\n        ); \n        if(this.state.loading){\n            form = <Spinner />\n        };\n        return (\n          <div className={classes.ContactData}>\n            <h4> Please enter your Contact Data</h4>\n            {form}\n          </div>\n        );\n    }\n}\n\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}