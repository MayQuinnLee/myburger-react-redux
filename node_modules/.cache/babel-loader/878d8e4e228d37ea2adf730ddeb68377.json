{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return updateObject(state, {\n        purchased: false\n      });\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = updateObject(action.orderDate, {\n        id: action.orderId\n      });\n      return updateObject(state, {\n        loading: false,\n        orders: state.orders.concat(newOrder),\n        purchased: true\n      });\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return updateObject(state, {\n        loading: false\n      });\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionTypes.FETCH_ORDER_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionTypes.FETCH_ORDER_SUCCESS:\n      return updateObject(state, {\n        orders: action.orders,\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDER_FAIL:\n      return updateObject(state, {\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_INIT","PURCHASE_BURGER_SUCCESS","newOrder","orderDate","id","orderId","concat","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","FETCH_ORDER_START","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,WAAW,CAACU,aAAjB;AACI,aAAOT,YAAY,CAACM,KAAD,EAAQ;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAR,CAAnB;;AACJ,SAAKL,WAAW,CAACW,uBAAjB;AACI,YAAMC,QAAQ,GAAGX,YAAY,CAACO,MAAM,CAACK,SAAR,EAAmB;AAACC,QAAAA,EAAE,EAAEN,MAAM,CAACO;AAAZ,OAAnB,CAA7B;AACA,aAAOd,YAAY,CAACM,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAE,KAAV;AACvBD,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaa,MAAb,CAAoBJ,QAApB,CADe;AAEvBP,QAAAA,SAAS,EAAE;AAFY,OAAR,CAAnB;;AAGJ,SAAKL,WAAW,CAACiB,oBAAjB;AACI,aAAOhB,YAAY,CAACM,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAR,CAAnB;;AACJ,SAAKJ,WAAW,CAACkB,qBAAjB;AACI,aAAOjB,YAAY,CAACM,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAR,CAAnB;;AACJ,SAAKJ,WAAW,CAACmB,iBAAjB;AACI,aAAOlB,YAAY,CAACM,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAR,CAAnB;;AACJ,SAAKJ,WAAW,CAACoB,mBAAjB;AACI,aAAOnB,YAAY,CAACM,KAAD,EAAQ;AAACJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAAhB;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAAR,CAAnB;;AACJ,SAAKJ,WAAW,CAACqB,gBAAjB;AACI,aAAOpB,YAAY,CAACM,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAR,CAAnB;;AACJ;AAAS,aAAOG,KAAP;AAlBb;AAoBH,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false,\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.PURCHASE_INIT:\n            return updateObject(state, {purchased: false,})\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = updateObject(action.orderDate, {id: action.orderId});\n            return updateObject(state, {loading: false,\n                orders: state.orders.concat(newOrder),\n                purchased: true})\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject(state, {loading: false})\n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject(state, {loading: true})\n        case actionTypes.FETCH_ORDER_START:\n            return updateObject(state, {loading: true})\n        case actionTypes.FETCH_ORDER_SUCCESS:\n            return updateObject(state, {orders: action.orders, loading: false})\n        case actionTypes.FETCH_ORDER_FAIL:\n            return updateObject(state, {loading: false})\n        default: return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}