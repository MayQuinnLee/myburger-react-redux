{"ast":null,"code":"export const updateObject = (state, updatedProperties) => {\n  return { ...state,\n    ...updatedProperties\n  };\n};\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react-redux/src/shared/utility.js"],"names":["updateObject","state","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumeric"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,KAAD,EAAQC,iBAAR,KAA8B;AACtD,SAAO,EACH,GAAGD,KADA;AAEH,OAAGC;AAFA,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAOC,KAAP,KAAiB;AAC1C,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAGD,KAAK,CAACE,QAAT,EAAkB;AACdD,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACH;;AACD,MAAGD,KAAK,CAACI,SAAT,EAAmB;AACfH,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACI,SAAtB,IAAmCH,OAA7C;AACH;;AACD,MAAGD,KAAK,CAACM,SAAT,EAAmB;AACfL,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACM,SAAtB,IAAmCL,OAA7C;AACH;;AACD,MAAID,KAAK,CAACO,OAAV,EAAmB;AACf,UAAMC,OAAO,GAAG,uIAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AACD,MAAID,KAAK,CAACU,SAAV,EAAqB;AACjB,UAAMF,OAAO,GAAG,OAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AACD,SAAOA,OAAP;AACH,CApBM","sourcesContent":["export const updateObject = (state, updatedProperties) => {\n    return {\n        ...state,\n        ...updatedProperties\n    }\n};\n\nexport const checkValidity = (value,rules) => {\n    let isValid = true;\n    if(rules.required){\n        isValid = value.trim() !== '' && isValid;\n    }\n    if(rules.minLength){\n        isValid = value.length >= rules.minLength && isValid;\n    }\n    if(rules.maxLength){\n        isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n    return isValid;\n};"]},"metadata":{},"sourceType":"module"}