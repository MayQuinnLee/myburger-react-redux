{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/myburger-react/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //     // alert('You continue!');\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i])); //queryParams key=value\n      }\n\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props); //Since BurgerBuilder is part of the routable area, we have access to the match, location, history props\n\n    axios.get(\"https://myburger-react-64ebe.firebaseio.com/ingredients.json\").then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  //this is only passing into the URL,now we have to pass it into the burger component using ComponentDidMount in Checkoutpage\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" Ingredients can't be loaded \") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","console","log","get","then","response","data","catch","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        ingredients: null,\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false,\n        loading: false,\n        error: false,\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n        //Since BurgerBuilder is part of the routable area, we have access to the match, location, history props\n        axios.get(\"https://myburger-react-64ebe.firebaseio.com/ingredients.json\")\n            .then(response => {\n                this.setState({ingredients: response.data})\n            })\n            .catch(error => {this.setState({error: true})})\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        this.setState( { purchasable: sum > 0 } );\n    }\n\n    addIngredientHandler = ( type ) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = ( type ) => {\n        const oldCount = this.state.ingredients[type];\n        if ( oldCount <= 0 ) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n    //     // alert('You continue!');\n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(i) + '=' +encodeURIComponent(this.state.ingredients[i]));\n            //queryParams key=value\n        }\n        const queryString = queryParams.join('&');\n        this.props.history.push({\n            pathname: '/checkout',\n            search:  '?' + queryString\n        })};\n        //this is only passing into the URL,now we have to pass it into the burger component using ComponentDidMount in Checkoutpage\n\n    render () {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        // {salad: true, meat: false, ...}\n\n        let orderSummary = null;\n\n\n        let burger = this.state.error ? <p> Ingredients can't be loaded </p> : <Spinner />\n\n        if(this.state.ingredients){\n            burger = (\n              <Aux>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls\n                  ingredientAdded={this.addIngredientHandler}\n                  ingredientRemoved={this.removeIngredientHandler}\n                  disabled={disabledInfo}\n                  purchasable={this.state.purchasable}\n                  ordered={this.purchaseHandler}\n                  price={this.state.totalPrice}\n                />\n              </Aux>\n            );\n            orderSummary = (<OrderSummary\n                    ingredients={this.state.ingredients}\n                    price={this.state.totalPrice}\n                    purchaseCancelled={this.purchaseCancelHandler}\n                    purchaseContinued={this.purchaseContinueHandler}\n                />\n            );\n        }\n\n        if (this.state.loading) {\n            orderSummary = <Spinner />;\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}              \n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}