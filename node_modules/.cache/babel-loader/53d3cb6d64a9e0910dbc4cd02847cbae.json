{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/myburger-react/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from '../Checkout/ContactData/ContactData';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      //change componentDidMount to componentWillMount. if not null will be passed into this.state.ingredients in ContactData. This will make sure that we already have access to the props(queryParams) before we render the child component\n      price: 0\n    };\n\n    this.checkoutCancelledHandler = () => this.props.history.goBack();\n\n    this.checkoutContinueHandler = () => this.props.history.push('checkout/contact-data');\n  }\n\n  componentWillMount() {\n    const query = new URLSearchParams(this.props.location.search);\n    const ingredients = {};\n    let price = 0;\n    console.log(this.props);\n\n    for (let param of query.entries()) {\n      //this will return ['salad','1']\n      if (param[0] === 'price') {\n        price = param[1];\n      } else {\n        ingredients[param[0]] = +param[1];\n      } //ingredients[bacon]=1\n\n    }\n\n    console.log(ingredients);\n    this.setState({\n      ingredients: ingredients,\n      totalPrice: price\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(CheckoutSummary, {\n      ingredients: this.state.ingredients,\n      checkoutCancelled: this.checkoutCancelledHandler,\n      checkoutContinue: this.checkoutContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: this.props.match.url + '/contact-data',\n      render: props => React.createElement(ContactData, Object.assign({\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/myburger-react/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","CheckoutSummary","ContactData","Checkout","state","ingredients","price","checkoutCancelledHandler","props","history","goBack","checkoutContinueHandler","push","componentWillMount","query","URLSearchParams","location","search","console","log","param","entries","setState","totalPrice","render","match","url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BK,KAD6B,GACrB;AACJC,MAAAA,WAAW,EAAE,IADT;AAEJ;AACAC,MAAAA,KAAK,EAAC;AAHF,KADqB;;AAAA,SAwB7BC,wBAxB6B,GAwBF,MACvB,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,EAzByB;;AAAA,SA4B7BC,uBA5B6B,GA4BH,MACtB,KAAKH,KAAL,CAAWC,OAAX,CAAmBG,IAAnB,CAAwB,uBAAxB,CA7ByB;AAAA;;AAO7BC,EAAAA,kBAAkB,GAAI;AAClB,UAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoB,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,MAAxC,CAAd;AACA,UAAMZ,WAAW,GAAE,EAAnB;AACA,QAAIC,KAAK,GAAG,CAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;;AACA,SAAK,IAAIY,KAAT,IAAkBN,KAAK,CAACO,OAAN,EAAlB,EAAkC;AAC9B;AACA,UAAGD,KAAK,CAAC,CAAD,CAAL,KAAW,OAAd,EAAsB;AAClBd,QAAAA,KAAK,GAAGc,KAAK,CAAC,CAAD,CAAb;AACH,OAFD,MAEO;AACHf,QAAAA,WAAW,CAACe,KAAK,CAAC,CAAD,CAAN,CAAX,GAAsB,CAACA,KAAK,CAAC,CAAD,CAA5B;AACH,OAN6B,CAM5B;;AACL;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AACA,SAAKiB,QAAL,CAAc;AAACjB,MAAAA,WAAW,EAAEA,WAAd;AAA2BkB,MAAAA,UAAU,EAAEjB;AAAvC,KAAd;AACH;;AAWDkB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AACA,MAAA,WAAW,EAAE,KAAKpB,KAAL,CAAWC,WADxB;AAEA,MAAA,iBAAiB,EAAE,KAAKE,wBAFxB;AAGA,MAAA,gBAAgB,EAAE,KAAKI,uBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWiB,KAAX,CAAiBC,GAAjB,GAAuB,eAApC;AACI,MAAA,MAAM,EAAGlB,KAAD,IAAW,oBAAC,WAAD;AACf,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWC,WADT;AAEf,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWmB;AAFH,SAGXf,KAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAgBH;;AAlD4B;;AAqDjC,eAAeL,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from '../Checkout/ContactData/ContactData';\n\nclass Checkout extends Component {\n    state = {\n        ingredients: null,\n        //change componentDidMount to componentWillMount. if not null will be passed into this.state.ingredients in ContactData. This will make sure that we already have access to the props(queryParams) before we render the child component\n        price:0,\n    }\n\n    componentWillMount () {\n        const query = new URLSearchParams(this.props.location.search);\n        const ingredients ={};\n        let price = 0;\n        console.log(this.props)\n        for (let param of query.entries()){\n            //this will return ['salad','1']\n            if(param[0]==='price'){\n                price = param[1];\n            } else {\n                ingredients[param[0]]=+param[1];\n            } //ingredients[bacon]=1\n        }\n        console.log(ingredients)\n        this.setState({ingredients: ingredients, totalPrice: price})\n    };\n\n    checkoutCancelledHandler = () => (\n        this.props.history.goBack()\n    );\n\n    checkoutContinueHandler = () => (\n        this.props.history.push('checkout/contact-data')\n    );\n\n\n    render(){\n        return(\n            <div>\n                <CheckoutSummary \n                ingredients={this.state.ingredients}\n                checkoutCancelled={this.checkoutCancelledHandler} \n                checkoutContinue={this.checkoutContinueHandler}\n                />\n                <Route path={this.props.match.url + '/contact-data'} \n                    render={(props)=> (<ContactData \n                        ingredients={this.state.ingredients}\n                        price={this.state.totalPrice}\n                        {...props}/>)}/>\n                {/*as a function and take jsx on the right side \n                Since we are handling it manually through render, we can now pass props*/}\n            </div>\n        )\n    }\n}\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}